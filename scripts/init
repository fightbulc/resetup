#!/usr/bin/env bash

# VARS
CWD=$(pwd)
BASE_PATH=$(dirname $(dirname $(readlink -f $0)))

# Colors for output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}ðŸš€ Initializing resetup data directory...${NC}"
echo ""

# Create data directory structure
DATA_DIR="$BASE_PATH/data"
CONFIG_DIR="$DATA_DIR/config"
FILES_DIR="$DATA_DIR/files"
SSH_DIR="$FILES_DIR/.ssh"

echo -e "${YELLOW}Creating directory structure...${NC}"
mkdir -p "$CONFIG_DIR"
mkdir -p "$FILES_DIR"
mkdir -p "$SSH_DIR"

# Create master.cnf from template
MASTER_CNF="$CONFIG_DIR/master.cnf"
if [ ! -f "$MASTER_CNF" ]; then
    echo -e "${YELLOW}Creating master configuration file...${NC}"
    cat > "$MASTER_CNF" << 'EOF'
#!/usr/bin/env bash

# Master configuration file for resetup
# Customize with your personal settings

# WiFi Configuration (optional)
export WIFI_ID="Your-WiFi-Network"
export WIFI_PASSWORD="your-wifi-password"

# Git Configuration
export GIT_USERNAME="Your Name"
export GIT_EMAIL="your.email@example.com"

# GitHub Configuration
export GITHUB_TOKEN="your-github-personal-access-token"
export GITHUB_USERNAME="your-github-username"

# API Keys and Tokens
export OPENAI_API_KEY="your-openai-api-key"
export ANTHROPIC_API_KEY="your-anthropic-api-key"

# Development Settings
export EDITOR="helix"  # or vim, nano, etc.
export DEFAULT_SHELL="/bin/bash"

# AWS Configuration (if needed)
export AWS_ACCESS_KEY_ID="your-aws-access-key"
export AWS_SECRET_ACCESS_KEY="your-aws-secret-key"
export AWS_DEFAULT_REGION="us-east-1"

# Docker Hub (if needed)
export DOCKER_USERNAME="your-docker-username"
export DOCKER_PASSWORD="your-docker-password"

# NPM Registry Token (if needed)
export NPM_TOKEN="your-npm-token"

# Turso Database (if needed)
export TURSO_DATABASE_URL="your-turso-database-url"
export TURSO_AUTH_TOKEN="your-turso-auth-token"

# Custom paths
export WORKSPACE_DIR="$HOME/workspace"
export PROJECTS_DIR="$HOME/projects"

# Feature flags
export INSTALL_OPTIONAL_TOOLS="true"
export USE_LATEST_VERSIONS="true"
export ENABLE_TELEMETRY="false"
EOF
    echo -e "${GREEN}âœ“ Created $MASTER_CNF${NC}"
else
    echo -e "${YELLOW}Master configuration file already exists, skipping...${NC}"
fi

# Create SSH config template
SSH_CONFIG="$SSH_DIR/config.default"
if [ ! -f "$SSH_CONFIG" ]; then
    echo -e "${YELLOW}Creating SSH configuration template...${NC}"
    cat > "$SSH_CONFIG" << 'EOF'
# SSH Configuration Template
# Copy this to 'config' and customize as needed

# GitHub
Host github.com
    HostName github.com
    User git
    IdentityFile ~/.ssh/id_rsa
    UseKeychain yes
    AddKeysToAgent yes

# Example server configuration
# Host myserver
#     HostName server.example.com
#     User myusername
#     Port 22
#     IdentityFile ~/.ssh/id_rsa
EOF
    echo -e "${GREEN}âœ“ Created $SSH_CONFIG${NC}"
else
    echo -e "${YELLOW}SSH configuration template already exists, skipping...${NC}"
fi

# Create README for data directory
DATA_README="$DATA_DIR/README.md"
if [ ! -f "$DATA_README" ]; then
    echo -e "${YELLOW}Creating data directory README...${NC}"
    cat > "$DATA_README" << 'EOF'
# Data Directory

This directory contains your personal configuration files and sensitive data that will be encrypted when you run `resetup pack`.

## Structure

- `config/master.cnf` - Main configuration file with environment variables
- `files/` - Directory for configuration files, dotfiles, SSH keys, etc.
- `files/.ssh/` - SSH keys and configuration

## Getting Started

1. Edit `config/master.cnf` with your personal settings
2. Copy your SSH keys to `files/.ssh/`
3. Add any dotfiles or configuration files to `files/`
4. Run `resetup pack` to encrypt everything

## Security Note

Never commit unencrypted files from this directory to version control. Always use `resetup pack` to encrypt your data first.
EOF
    echo -e "${GREEN}âœ“ Created $DATA_README${NC}"
else
    echo -e "${YELLOW}Data directory README already exists, skipping...${NC}"
fi

echo ""
echo -e "${GREEN}âœ… Data directory initialized successfully!${NC}"
echo ""
echo -e "${BLUE}Next steps:${NC}"
echo "1. Edit ${YELLOW}data/config/master.cnf${NC} with your settings"
echo "2. Copy your SSH keys to ${YELLOW}data/files/.ssh/${NC}"
echo "3. Add dotfiles and config files to ${YELLOW}data/files/${NC}"
echo "4. Run ${YELLOW}resetup pack${NC} to encrypt your configuration"
echo ""

# Return to original directory
cd $CWD